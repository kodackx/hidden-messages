services:
  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - proxy
    depends_on:
      - web
      - api

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: hidden_messages
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d hidden_messages"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app

  api:
    build: ./backend
    command: >
      /bin/sh -c "uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level ${LOG_LEVEL:-info}"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - app
      - proxy

  web:
    build:
      context: ./frontend
      target: development
    env_file:
      - ./.env
    command: >
      /bin/sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app
      - proxy
    depends_on:
      - api

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  app:
    driver: bridge
  proxy:
    driver: bridge